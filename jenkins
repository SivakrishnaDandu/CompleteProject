def BLUE_CONTAINER_NAME="nginx"
def BLUE_CONTAINER_NAME_TAG="sivakrishna1992/nginx"
def CONTAINER_TAG="latest"
def DOCKER_HUB_USER="sivakrishna1992"


node('') {
stage ('Initialize') {
        def mavenHome  = tool 'maven'
        env.PATH = "${mavenHome}/bin:${env.PATH}"
}
stage ('Clone') {
dir("Blue"){
git branch: 'Blue',
credentialsId: 'd7534a5a-2da5-4111-87de-8c795e5f6fcd',
url: 'https://github.com/SivakrishnaDandu/Blue.git'
}
}
stage ('Build') {
sh """
cd $WORKSPACE/Blue
mvn clean install"""
}
stage ("Image Prune") {
    imagePrune(BLUE_CONTAINER_NAME)
}
stage('Image Build'){
        imageBuild(BLUE_CONTAINER_NAME,CONTAINER_TAG)
    }
stage('Push to Docker Registry'){
        withCredentials([usernamePassword(credentialsId: 'DockerHubAccount', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
            pushToImage(BLUE_CONTAINER_NAME, CONTAINER_TAG, USERNAME, PASSWORD)
        }
    }

 def imagePrune(blueContainerName){
    try {
        sh """
        docker stop $blueContainerName
        docker image prune -f
        """
    } catch(error){

    }
}
def imageBuild(blueContainerName,tag){
    sh """
    cd $WORKSPACE/Blue
    cp $WORKSPACE/Blue/target/*.war $WORKSPACE/Blue
    docker build -t $blueContainerName:$tag  -t $blueContainerName --pull --no-cache ."""
}

def pushToImage(blueContainerName, tag, dockerUser, dockerPassword){
    sh """docker login -u $dockerUser -p $dockerPassword
    docker tag $blueContainerName:$tag $dockerUser/$blueContainerName:$tag
    docker push $dockerUser/$blueContainerName:$tag """
    
    echo "Image push complete"
    }


